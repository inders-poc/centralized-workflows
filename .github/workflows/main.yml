name: Node.js CI-2

on:
  workflow_call:
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true

jobs:
  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  nodejs-sca-checks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Generate package.lock json
      run: npm i --package-lock-only
    - name: Find vulnerable packages
      run: npm audit
      
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download Gitleaks
      run: |
        apt-get update && apt-get -y install wget
        wget https://github.com/zricethezav/gitleaks/releases/download/v8.8.11/gitleaks_8.8.11_linux_x64.tar.gz
        tar xvf gitleaks_8.8.11_linux_x64.tar.gz
    - name: Run Gitleaks
      run: |
        echo GITHUBWORKSPACE=$GITHUB_WORKSPACE
        ./gitleaks detect --source $GITHUB_WORKSPACE -v
    
  sast-scans:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup python image
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install NodeJSScan
      run: |
        pip install nodejsscan
    - name: Run NodeJSScan
      run: |
        echo GITHUBWORKSPACE=$GITHUB_WORKSPACE
        nodejsscan -d $GITHUB_WORKSPACE
      
  build:
    runs-on: ubuntu-latest
    needs: [ codeql, nodejs-sca-checks, sast-scans, gitleaks]
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm test
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker Login
      uses: docker/login-action@v2.0.0
      with:
        username: ${{ secrets.registry_username }}
        password: ${{ secrets.registry_password }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: true
        image_name: ipsindersingh/central-hello-world
        tag: mil1
        tags: test:1.0.0
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
  update:
    name: Trigger Argocd
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: commit github
        run: echo done with commit

   
      
